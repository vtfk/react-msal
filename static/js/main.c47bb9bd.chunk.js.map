{"version":3,"sources":["../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/config.js","../../src/lib/auth-provider.js","../../src/lib/use-session-storage.js","config.js","App.js","index.js"],"names":["Symbol","iterator","asyncIterator","_catch","body","recover","result","e","then","_finallyRethrows","finalizer","bind","auth","clientId","process","authority","redirectUri","postLogoutRedirectUri","cache","cacheLocation","storeAuthStateInCookie","userInfoUrl","isMock","mockUser","JSON","displayName","givenName","name","onPremisesSamAccountName","surname","tenantId","userPrincipalName","username","MsalContext","React","useSession","useContext","MsalProvider","updateToken","console","publicClient","account","user","saveUserdata","response","token","idToken","expires","Date","updateUserInfo","isAuthenticated","setAuth","authStatus","getUserInfo","children","config","scopes","defaultConfig","loginScopes","ua","window","msie","msie11","msedge","isIE","isEdge","serialize","stringify","deserialize","parse","useState","itemInStorage","defaultValue","state","setState","prevKeyRef","useRef","useEffect","prevKey","key","useSessionStorage","setPublicClient","popupOpen","setPopupOpen","loginError","setLoginError","axios","pc","copyAuth","error","now","retry","isValid","func","test","is401","value","login","method","signInType","logout","getToken","getTokenRedirect","getTokenPopup","apiGet","url","apiPost","payload","apiPut","AUTH_REDIRECT_URL","loginRequest","forceRefresh","AppContent","role","aria-label","obj","tableRows","push","map","row","keyTable","onClick","App","includes","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"idAoK+D,qBAAXA,SAA0BA,OAAOC,WAAaD,OAAOC,SAAWD,OAAO,qBA6DvD,qBAAXA,SAA0BA,OAAOE,gBAAkBF,OAAOE,cAAgBF,OAAO,0BAiVnI,SAASG,EAAOC,EAAMC,GAC5B,IACC,IAAIC,EAASF,IACZ,MAAMG,GACP,OAAOF,EAAQE,GAEhB,OAAID,GAAUA,EAAOE,KACbF,EAAOE,UAAK,EAAQH,GAErBC,EAID,SAASG,EAAiBL,EAAMM,GACtC,IACC,IAAIJ,EAASF,IACZ,MAAOG,GACR,OAAOG,GAAU,EAAMH,GAExB,OAAID,GAAUA,EAAOE,KACbF,EAAOE,KAAKE,EAAUC,KAAK,MAAM,GAAQD,EAAUC,KAAK,MAAM,IAE/DD,GAAU,EAAOJ,GCxkBzB,IAWA,EAAe,CACbM,KAAM,CACJC,SAAUC,oHADN,eAEJC,UAAWD,oHAFP,eAGJE,YAAaF,oHAHT,kBAIJG,sBAAuBH,0IAAoC,mBAE7DI,MAAO,CACLC,cAAeL,yIADV,iBAELM,uBAAwBN,oJAA+C,GAEzEO,YAAaP,wIAXA,uHAYbQ,OAAQR,kIAA4BA,oHAA5BA,oBAZK,EAabS,SAAUT,mIAA6BU,WAAWV,oHAAxCA,gBAxBY,CACtBW,YADsB,iBAEtBC,UAFsB,QAGtBC,KAHsB,iBAItBC,yBAJsB,UAKtBC,QALsB,WAMtBC,SANsB,uCAOtBC,kBAPsB,yBAQtBC,SAAU,2BCFCC,EAAcC,IAApB,gBACMC,EAAa,kBAAMC,qBAAN,IAEbC,EAAe,SAAC,GAIvB,IAkEWC,EAlEX,gBAoEF,OADAC,2BACA,EAFgC,gBAGTC,EAAA,sBAAkCC,QAASC,EAAKV,UAHvC,8CAI1BW,EAAaC,EAJa,4BAEN,QAAP,YApEjB,oCA+CWD,EA/CX,kBAgDFJ,4BACA,IAAMM,EAAQD,EAAd,YACME,EAAUF,EAAhB,QACMG,EAAU,IAAIC,KAAKJ,EAAT,WAAhB,UAJ2C,uBAKpBK,EAAe,EALK,sBAM3C,IAAMC,EAAkBL,GAASE,GAAU,IAAIC,MAA/C,UAGAG,EAAQ,CACND,gBADM,EAENR,KAFM,EAGNG,MAHM,EAINC,QAJM,EAKNC,QALM,EAMNK,WARF,gBAtDE,oCAyCWH,EAzCX,kBAyCwC,OAC1CV,8BAD0C,gBAEnBc,EAFmB,sBAG1C,oBA5CE,oCAHJC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,OAEMlC,EAASiC,UAAiBE,EAAhC,OACMlC,EAAWgC,YAAmBE,EAApC,SACMpC,EAAckC,eAAsBE,EAA1C,YACMC,EAAcF,GAAUD,EAAVC,QAA2BC,EAA/C,OACMxC,EAAwBsC,8BAAqCE,OAAnE,sBAEME,EAAKC,iBAAX,UACMC,EAAOF,UAAb,SACMG,EAASH,UAAf,YACMI,EAASJ,UAAf,SACMK,EAAOH,KAAYC,EAAzB,EACMG,EAASF,EAAf,EAZI,ECXN,gBAA8G,iBAAJ,GAAI,MAA7DG,iBAA6D,MAAjD1C,KAAK2C,UAA4C,MAAjCC,mBAAiC,MAAnB5C,KAAK6C,MAAc,IAClFC,oBAAS,WACjC,IAAMC,EAAgBX,8BAAtB,GACA,SACSQ,EAAP,GAE6B,oBAAjBI,EAA8BA,IAAkBA,GAA9D,MALKC,EADqG,KAC9FC,EAD8F,KAStGC,EAAaC,iBAAnB,GAWA,OATAC,qBAAU,WACR,IAAMC,EAAUH,EAAhB,QACIG,IAAJ,GACElB,oCAEFe,YACAf,gCAAmCM,EAAnCN,MACC,CAACmB,EAAKN,EAPTI,IASO,CAACJ,EAAR,GDMwBO,CADxB,YACsD,CACpD9B,gBADoD,EAEpDR,MAFoD,EAGpDG,OAHoD,EAIpDC,SAJoD,EAKpDC,SAAS,IAAIC,MALuC,UAMpDI,WAAY,YANPxC,EAfH,KAeSuC,EAfT,OAwBoCmB,qBAAjC9B,EAxBH,KAwBiByC,EAxBjB,OAyB8BX,oBAzB9B,GAyBGY,EAzBH,KAyBcC,EAzBd,OA0BgCb,oBA1BhC,GA0BGc,EA1BH,KA0BeC,EA1Bf,KA2BInC,EAA+DtC,EA3BnE,gBA2BqB8B,EAA8C9B,EA3BnE,KA2B2BiC,EAAwCjC,EA3BnE,MA2BkCkC,EAAiClC,EA3BnE,QA2B2CmC,EAAwBnC,EA3BnE,QA2BoDwC,EAAexC,EA3BnE,WA6BEyC,EAAc,SAAH,OAAkB,OACjCd,2BACA+C,sDAFiC,8BAG7B,uBACqBA,QADrB,sBAEF,OAFE,aAH6B,YAQ/B,OADA/C,iBACA,OARa,oCA4CjBsC,qBAAU,WAER,GADAtC,yBACA,EAAa,CACX,IAAMgD,EAAK,IAAI,EAAJ,EAAiChC,GAA5C,GACA0B,KAGA,IAAMO,EAAW,EAAH,GAAd,GAkBA,GAjBArC,EAAQ,EAAD,MAAgBC,WAAY,aACnCmC,gCAAgC,YAC9B,KAAc,CACZ,IAAM7C,EAAO6C,mBAAb,GACA5C,EAAaC,EAAbD,OACK,CACL,IAAM6C,EAAW,EAAH,GAAd,GACArC,EAAQ,EAAD,MAAgBC,WAAY,kBANvCmC,OAQS,SAAAE,GACP,IAAMD,EAAW,EAAH,GAAd,GACArC,EAAQ,EAAD,MAAgBC,WAAY,cACnCb,eACA8C,QAIEE,0BAAJ,EAAoC,CAClC,IAAM7C,EAAO6C,mBAAb,GACMC,EAAW,EAAH,GAAd,GAEA,GADArC,EAAQ,EAAD,MAAgBC,WAAY,aACnC,EAEO,CACL,IAAMoC,EAAW,EAAH,GAAd,GACArC,EAAQ,EAAD,MAAgBD,gBAAiBL,GAASE,GAAU,IAAIC,MAAxD,UAA0EI,WAAY,mBAH7Fd,SA9BRuC,IAwCAA,qBAAU,WAER,GADAtC,uBACA,EAAY,CACV,IAAMmD,EAAM,IAAZ,KACAA,UAAYA,YAAZA,IAEAvC,EAAQ,CACND,iBADM,EAENR,KAFM,EAGNG,MAHM,QAINC,QAJM,QAKNC,QAAS2C,EALH,UAMNtC,WAAY,aAGdb,wCAfJsC,IAmBA,IAwFMc,EAAQ,SAAH,OACT,OAHc,SAAC9C,EAAOE,GAAR,OAAoBF,GAASE,GAAU,IAAIC,MAA3C,UAGV4C,CAAQ9C,EAAZ,IACEwC,sDAD6B,8BAEzB,uBACqBO,KADrB,kBAEF,OAFE,aAFyB,YAKb,OATN,SAAAJ,GAAK,MAAI,MAAMK,KAAKL,EAAf,SAUTM,CADU,mBAENzD,EAFM,4BAGZgD,sDAHY,cAIR,uBACqBO,KADrB,kBAEF,OAFE,aAJQ,YASV,OADAtD,kBACA,SAGFA,kBACA,SAIJA,wCADK,gBAECD,EAFD,qBAGL,OAAOuD,QAzBA,oCAiCX,OACE,kBAAC5D,EAAD,UACE+D,MAAO,CACL9C,gBADK,EAELE,WAFK,EAGLV,KAHK,EAILG,MAJK,EAKLC,QALK,EAMLoC,UANK,EAOLE,WAPK,EAQLa,MAnIQ,SAAH,cAAwBC,MAArB,iBAAH,IAET,GADA3D,sBACA,EAAmB,OAAO,QAAP,cACnB,IAAM4D,EAAcnC,GAAD,kBAAnB,EAH8D,+BAK1DmC,EAL0D,CAM5DhB,MAN4D,yCAQ1D,IAAMK,EAAW,EAAH,GAAd,GADE,OAEFrC,EAAQ,EAAD,MAAgBC,WAAY,aAFjC,gBAGIZ,aAHJ,qBAIEA,EAJF,cAKAF,EAAYE,EAAZF,oBAZwD,YAe1DC,eACA8C,WAhB0D,iBAkB1DF,MAlB0D,sEAoBvD,qBAAIgB,EAAgC,CACzC,IAAMX,EAAW,EAAH,GAAd,GACArC,EAAQ,EAAD,MAAgBC,WAAY,aACnCZ,oBAvB4D,mEAArD,oCAoIL4D,OAzGS,WACb7D,sBACAqB,iCAnJF,aAqJE,IAAMnB,EAAUD,qBAAgCE,EAAhCF,qBAAhB,EACAA,SAAoB,CAAEC,QAAF,EAAWxB,2BAqG3BoF,SA3DW,SAAH,SAGZ,OAFA9D,wBAEA,mBADoByB,GAAD,kBAAnB,GACoC,gBAtBb,SAAH,OACpBzB,gCACA,IAAMiD,EAAW,EAAH,GAAd,GACArC,EAAQ,EAAD,MAAgBC,WAAY,aAHY,oBAI3C,uBACkBZ,qBADlB,sBAEFW,EAAQ,EAAD,MAAgBN,iBANsB,WAQ7C,IACE,IAAM2C,EAAW,EAAH,GAAd,GACArC,EAAQ,EAAD,MAAgBC,WAAY,aACnCZ,0BACA,MAAOiD,GACPlD,iBACA8C,SAd2C,gEAA3B,mCAuBLiB,CADqB,IAE7B,gBA5Ca,SAAH,OACjB/D,6BAD4C,oBAExC,uBACqBC,qBADrB,sBAEFG,EAAaC,EAAD,YAAZD,SAJ0C,WAK5B,yCACV,OACFwC,MADE,gBAEqB3C,oBAFrB,sBAGFG,EAAaC,EAAD,YAAZD,SAJY,YAMZJ,eACA8C,WAPY,iBASZF,MATY,wEAL4B,gEAA3B,mCA6CFoB,CADR,IALK,oCA4DRC,OAjBS,SAAAC,GAAG,OAAId,GAAM,kBAAML,QAAN,OAkBtBoB,QAjBU,SAACD,EAAKE,GAAN,OAAkBhB,GAAM,kBAAML,WAAN,OAkBlCsB,OAjBS,SAACH,EAAKE,GAAN,OAAkBhB,GAAM,kBAAML,UAAN,SAEvC,IE1QW/B,EAAS,CACpB3C,KAAM,CACJC,SAAU,uCACVE,UAAW,yEACXC,YAAaF,oHAAY+F,mBAAqB,wBAC9C5F,sBAAuB,sCAEzBC,MAAO,CACLC,cAAe,iBACfC,wBAAwB,IAIf0F,EAAe,CAC1BtD,OAAQ,CAAC,SAAU,UAAW,aAC9BuD,cAAc,GCSVC,EAAa,WAAO,IAAD,EACE7E,IAAjBO,EADe,EACfA,KAAM0D,EADS,EACTA,OACd,OACE,oCACE,2CACa1D,EAAKhB,UADlB,KAC8B,0BAAMuF,KAAK,MAAMC,aAAW,qBAA5B,gBAAyD,6BADvF,iCAxBW,SAACC,GAChB,IAAMC,EAAY,GAClB,IAAK,IAAMrC,KAAOoC,EAChBC,EAAUC,KAAK,CAAEtC,MAAKiB,MAAOmB,EAAIpC,KAGnC,OACE,+BACE,+BACGqC,GAAaA,EAAUE,KAAI,SAAAC,GAAG,OAC7B,wBAAIxC,IAAKwC,EAAIxC,KACX,4BAAKwC,EAAIxC,KACT,4BAAKwC,EAAIvB,aAiBdwB,CAAS9E,GAEV,4BAAQ+E,QAAS,kBAAMrB,MAAvB,cAuBSsB,EAlBH,WAAO,IAAD,EAC+BvF,IAAvCe,EADQ,EACRA,gBAAiB+C,EADT,EACSA,MAAO7C,EADhB,EACgBA,WAEhC,MAAI,CAAC,WAAWuE,SAASvE,GAChB,2CAGJF,EAMDA,GAAkC,aAAfE,EACd,kBAAC,EAAD,WADT,GALEb,QAAQqF,IAAI,eACZ3B,EAAMa,EAAc,iBACb,uCC1CXe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAcxE,OAAQA,EAAQC,OAAQsD,GACpC,kBAAC,EAAD,QAGJkB,SAASC,eAAe,W","file":"static/js/main.c47bb9bd.chunk.js","sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","const defaultMockUser = {\n  displayName: 'Trine Testesen',\n  givenName: 'Trine',\n  name: 'Trine Testesen',\n  onPremisesSamAccountName: 'tri0308',\n  surname: 'Testesen',\n  tenantId: '08f3813c-9f29-482f-9aec-16ef7cbf477a',\n  userPrincipalName: 'trine.testesen@vtfk.no',\n  username: 'trine.testesen@vtfk.no'\n}\n\nexport default {\n  auth: {\n    clientId: process.env.AUTH_CLIENT_ID,\n    authority: process.env.AUTH_AUTHORITY,\n    redirectUri: process.env.AUTH_REDIRECT_URL,\n    postLogoutRedirectUri: process.env.AUTH_POST_LOGOUT_URL || 'https://vtfk.no'\n  },\n  cache: {\n    cacheLocation: process.env.AUTH_CACHE_LOCATION || 'sessionStorage',\n    storeAuthStateInCookie: process.env.AUTH_STATE_IN_COOKIE === 'true' || false\n  },\n  userInfoUrl: process.env.AUTH_USER_INFO_URL || 'https://graph.microsoft.com/v1.0/me?$select=userPrincipalName,onPremisesSamaccountName,givenName,surname,displayName',\n  isMock: process.env.AUTH_IS_MOCK || process.env.REACT_APP_IS_MOCK || false,\n  mockUser: process.env.AUTH_MOCK_USER ? JSON.parse(process.env.AUTH_MOCK_USER) : defaultMockUser\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport * as msal from '@azure/msal-browser'\nimport { useSessionStorage } from './use-session-storage'\nimport defaultConfig from '../config'\n\nexport const MsalContext = React.createContext()\nexport const useSession = () => useContext(MsalContext)\n\nexport const MsalProvider = ({\n  children,\n  config,\n  scopes\n}) => {\n  const isMock = config.isMock || defaultConfig.isMock\n  const mockUser = config.mockUser || defaultConfig.mockUser\n  const userInfoUrl = config.userInfoUrl || defaultConfig.userInfoUrl\n  const loginScopes = scopes || config.scopes || defaultConfig.scopes\n  const postLogoutRedirectUri = config.auth.postLogoutRedirectUri || defaultConfig.auth.postLogoutRedirectUri\n\n  const ua = window.navigator.userAgent\n  const msie = ua.indexOf('MSIE ')\n  const msie11 = ua.indexOf('Trident/')\n  const msedge = ua.indexOf('Edge/')\n  const isIE = msie > 0 || msie11 > 0\n  const isEdge = msedge > 0\n\n  const sessionKey = 'MSAL-AUTH'\n  const [auth, setAuth] = useSessionStorage(sessionKey, {\n    isAuthenticated: isMock,\n    user: false,\n    token: false,\n    idToken: false,\n    expires: new Date().getTime(),\n    authStatus: 'unknown'\n  })\n\n  const [publicClient, setPublicClient] = useState()\n  const [popupOpen, setPopupOpen] = useState(false)\n  const [loginError, setLoginError] = useState(false)\n  const { isAuthenticated, user, token, idToken, expires, authStatus } = auth\n\n  const getUserInfo = async token => {\n    console.log('getUserInfo')\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\n    try {\n      const { data } = await axios.get(userInfoUrl)\n      return data\n    } catch (error) {\n      console.error(error)\n      return {}\n    }\n  }\n\n  async function updateUserInfo (token, user) {\n    console.log('updateUserInfo')\n    const userInfo = await getUserInfo(token)\n    return { ...user, ...userInfo }\n  }\n\n  async function saveUserdata (response, user) {\n    console.log('saveUserdata')\n    const token = response.accessToken\n    const idToken = response.idToken\n    const expires = new Date(response.expiresOn).getTime()\n    const userInfo = await updateUserInfo(token, user)\n    const isAuthenticated = token && expires > new Date().getTime()\n    const authStatus = 'finished'\n\n    setAuth({\n      isAuthenticated,\n      user: userInfo,\n      token,\n      idToken,\n      expires,\n      authStatus\n    })\n  }\n\n  async function updateToken (user) {\n    console.log('updateToken')\n    if (!publicClient) return false\n    const response = await publicClient.acquireTokenSilent({ account: user.username, ...loginScopes })\n    await saveUserdata(response, user)\n  }\n\n  useEffect(() => {\n    console.log('ue-!mock')\n    if (!isMock) {\n      const pc = new msal.PublicClientApplication(config || defaultConfig)\n      setPublicClient(pc)\n\n      // Første innlogging\n      const copyAuth = { ...auth }\n      setAuth({ ...copyAuth, authStatus: 'pending' })\n      pc.handleRedirectPromise().then((response) => {\n        if (response) {\n          const user = pc.getAllAccounts()[0]\n          saveUserdata(response, user)\n        } else {\n          const copyAuth = { ...auth }\n          setAuth({ ...copyAuth, authStatus: 'finished' })\n        }\n      }).catch(error => {\n        const copyAuth = { ...auth }\n        setAuth({ ...copyAuth, authStatus: 'rejected' })\n        console.log(error)\n        setLoginError(error)\n      })\n\n      // Dersom bruker er innlogget fra tidligere\n      if (pc.getAllAccounts().length > 0) {\n        const user = pc.getAllAccounts()[0]\n        const copyAuth = { ...auth }\n        setAuth({ ...copyAuth, authStatus: 'pending' })\n        if (!token) {\n          updateToken(user)\n        } else {\n          const copyAuth = { ...auth }\n          setAuth({ ...copyAuth, isAuthenticated: token && expires > new Date().getTime(), authStatus: 'finished' })\n        }\n      }\n    // eslint-disable-next-line\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log('ue-mock')\n    if (isMock) {\n      const now = new Date()\n      now.setDate(now.getDate() + 24)\n\n      setAuth({\n        isAuthenticated: true,\n        user: mockUser,\n        token: '12345',\n        idToken: '67890',\n        expires: now.getTime(),\n        authStatus: 'finished'\n      })\n\n      console.log('Running in mock modus')\n    }\n    }, []) // eslint-disable-line\n\n  const login = async (loginRequest, method = 'loginRedirect') => {\n    console.log('login')\n    if (!publicClient) return null\n    const signInType = (isIE || isEdge) ? 'loginRedirect' : method\n\n    if (signInType === 'loginPopup') {\n      setPopupOpen(true)\n      try {\n        const copyAuth = { ...auth }\n        setAuth({ ...copyAuth, authStatus: 'pending' })\n        await publicClient.loginPopup(loginRequest)\n        if (publicClient.getAccount()) {\n          updateToken(publicClient.getAccount())\n        }\n      } catch (error) {\n        console.log(error)\n        setLoginError(error)\n      } finally {\n        setPopupOpen(false)\n      }\n    } else if (signInType === 'loginRedirect') {\n      const copyAuth = { ...auth }\n      setAuth({ ...copyAuth, authStatus: 'pending' })\n      publicClient.loginRedirect(loginRequest)\n    }\n  }\n\n  const logout = () => {\n    console.log('logout')\n    window.sessionStorage.removeItem(sessionKey)\n\n    const account = publicClient.getAccountByHomeId(user.homeAccountId) || undefined\n    publicClient.logout({ account, postLogoutRedirectUri })\n  }\n\n  const getTokenPopup = async (loginRequest) => {\n    console.log('getTokenPopup')\n    try {\n      const response = await publicClient.acquireTokenSilent(loginRequest)\n      saveUserdata(response.accessToken, user)\n    } catch (error) {\n      try {\n        setPopupOpen(true)\n        const response = await publicClient.acquireTokenPopup(loginRequest)\n        saveUserdata(response.accessToken, user)\n      } catch (error) {\n        console.log(error)\n        setLoginError(error)\n      } finally {\n        setPopupOpen(false)\n      }\n    }\n  }\n\n  // This function can be removed if you do not need to support IE\n  const getTokenRedirect = async (loginRequest) => {\n    console.log('getTokenRedirect')\n    const copyAuth = { ...auth }\n    setAuth({ ...copyAuth, authStatus: 'pending' })\n    try {\n      const token = await publicClient.acquireTokenSilent(loginRequest)\n      setAuth({ ...copyAuth, token })\n    } catch (error) {\n      try {\n        const copyAuth = { ...auth }\n        setAuth({ ...copyAuth, authStatus: 'pending' })\n        publicClient.acquireTokenRedirect(loginRequest)\n      } catch (error) {\n        console.error(error)\n        setLoginError(error)\n      }\n    }\n  }\n\n  const getToken = async (loginRequest, method) => {\n    console.log('getToken')\n    const signInType = (isIE || isEdge) ? 'loginRedirect' : method\n    if (signInType === 'loginRedirect') {\n      return await getTokenRedirect(loginRequest)\n    } else {\n      return await getTokenPopup(loginRequest)\n    }\n  }\n\n  // Implementerer api kall\n  const is401 = error => /401/.test(error.message)\n  const isValid = (token, expires) => token && expires > new Date().getTime()\n\n  const retry = async func => {\n    if (isValid(idToken, expires)) {\n      axios.defaults.headers.common.Authorization = `Bearer ${idToken}`\n      try {\n        const { data } = await func()\n        return data\n      } catch (error) {\n        if (is401(error)) {\n          await updateToken(user)\n          axios.defaults.headers.common.Authorization = `Bearer ${idToken}`\n          try {\n            const { data } = await func()\n            return data\n          } catch (error) {\n            console.error(error)\n            return false\n          }\n        } else {\n          console.error(error)\n          return false\n        }\n      }\n    } else {\n      console.warn('invalid token or expire')\n      await updateToken(user)\n      return func()\n    }\n  }\n\n  const apiGet = url => retry(() => axios.get(url))\n  const apiPost = (url, payload) => retry(() => axios.post(url, payload))\n  const apiPut = (url, payload) => retry(() => axios.put(url, payload))\n\n  return (\n    <MsalContext.Provider\n      value={{\n        isAuthenticated,\n        authStatus,\n        user,\n        token,\n        idToken,\n        popupOpen,\n        loginError,\n        login,\n        logout,\n        getToken,\n        apiGet,\n        apiPost,\n        apiPut\n      }}\n    >\n      {children}\n    </MsalContext.Provider>\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\n\nfunction useSessionStorage (key, defaultValue, { serialize = JSON.stringify, deserialize = JSON.parse } = {}) {\n  const [state, setState] = useState(() => {\n    const itemInStorage = window.sessionStorage.getItem(key)\n    if (itemInStorage) {\n      return deserialize(itemInStorage)\n    }\n    return typeof defaultValue === 'function' ? defaultValue() : (defaultValue || '')\n  })\n\n  const prevKeyRef = useRef(key)\n\n  useEffect(() => {\n    const prevKey = prevKeyRef.current\n    if (prevKey !== key) {\n      window.sessionStorage.removeItem(prevKey)\n    }\n    prevKeyRef.current = key\n    window.sessionStorage.setItem(key, serialize(state))\n  }, [key, state, serialize])\n\n  return [state, setState]\n}\n\nexport { useSessionStorage }\n","export const config = {\n  auth: {\n    clientId: '58e282d0-b89b-4d06-b188-a3761389c33d',\n    authority: 'https://login.microsoftonline.com/08f3813c-9f29-482f-9aec-16ef7cbf477a',\n    redirectUri: process.env.AUTH_REDIRECT_URL || 'http://localhost:3000',\n    postLogoutRedirectUri: 'https://github.com/vtfk/react-msal'\n  },\n  cache: {\n    cacheLocation: 'sessionStorage',\n    storeAuthStateInCookie: false\n  }\n}\n\nexport const loginRequest = {\n  scopes: ['openid', 'profile', 'User.Read'],\n  forceRefresh: true\n}\n\nexport const apiRequest = {\n  scopes: ['openid', 'profile', 'User.Read'],\n  forceRefresh: false\n}\n","import React from 'react'\nimport { useSession } from '@vtfk/react-msal'\nimport { loginRequest } from './config'\n\nconst keyTable = (obj) => {\n  const tableRows = []\n  for (const key in obj) {\n    tableRows.push({ key, value: obj[key] })\n  }\n\n  return (\n    <table>\n      <tbody>\n        {tableRows && tableRows.map(row => (\n          <tr key={row.key}>\n            <td>{row.key}</td>\n            <td>{row.value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nconst AppContent = () => {\n  const { user, logout } = useSession()\n  return (\n    <>\n      <code>\n        Hi there, {user.givenName}! <span role='img' aria-label='waving hand emoji'>👋</span><br />\n        Here is you MSAL user object:\n      </code>\n\n      {keyTable(user)}\n\n      <button onClick={() => logout()}>Log out!</button>\n    </>\n  )\n}\n\nconst App = () => {\n  const { isAuthenticated, login, authStatus } = useSession()\n\n  if (['pending'].includes(authStatus)) {\n    return <div>Loading...</div>\n  }\n\n  if (!isAuthenticated) {\n    console.log('app-!isAuth')\n    login(loginRequest, 'loginRedirect')\n    return <></>\n  }\n\n  if (isAuthenticated && authStatus === 'finished') {\n    return <AppContent />\n  }\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { MsalProvider } from '@vtfk/react-msal'\nimport { config, loginRequest } from './config'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MsalProvider config={config} scopes={loginRequest}>\n      <App />\n    </MsalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}